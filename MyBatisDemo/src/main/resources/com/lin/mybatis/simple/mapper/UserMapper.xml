<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.lin.mybatis.simple.mapper.UserMapper">
	<resultMap type="SysUser" id="userMap">
		<id property="id" column="id"></id>
		<result property="userName" column="user_name"></result>
		<result property="userPassword" column="user_password"></result>
		<result property="userEmail" column="user_email"></result>
		<result property="userInfo" column="user_info"></result>
		<result property="headImg" column="head_img" jdbcType="BLOB"></result>
		<result property="createdAt" column="created_at" jdbcType="TIMESTAMP"></result>
	</resultMap>
	
 	<select id="selectById" resultMap="userMap">
 		select * from sys_user where id = #{id}
	</select>
	
	<select id="selectAll" resultMap="userMap">
		select * from sys_user
	</select>
	
	<select id="selectRolesByUserId" resultType="com.lin.mybatis.simple.model.SysRole">
		select 
			r.id,
			r.role_name roleName,
			r.enabled,
			r.create_by createBy,
			r.created_at createdAt,
			u.user_name as "user.userName",
			u.user_email as "user.userEmail"
		from sys_user as u
		inner join sys_user_role ur on u.id = ur.user_id
		inner join sys_role r on ur.role_id = r.id
		where
			u.id = #{userId}
	</select>
	
	<insert id="insert">
		insert into sys_user (id, user_name, user_password, user_email, user_info, head_img, created_at) values 
		(#{id},#{userName},#{userPassword},#{userEmail},#{userInfo}, #{headImg, jdbcType=BLOB}, #{createdAt, jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="insert2" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user (user_name, user_password, user_email, user_info, head_img, created_at) values 
		(#{userName},#{userPassword},#{userEmail},#{userInfo}, #{headImg, jdbcType=BLOB}, #{createdAt, jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="insert3">
		insert into sys_user (user_name, user_password, user_email, user_info, head_img, created_at) values 
		(#{userName},#{userPassword},#{userEmail},#{userInfo}, #{headImg, jdbcType=BLOB}, #{createdAt, jdbcType=TIMESTAMP})
		<selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateById">
		update sys_user 
		set 
			user_name = #{userName}, 
			user_password = #{userPassword}, 
			user_email = #{userEmail},
			user_info = #{userInfo}, 
			head_img = #{headImg, jdbcType = BLOB}, 
			created_at = #{createdAt, jdbcType=TIMESTAMP}
		where id = #{id}
	</update>
	
	<delete id="deleteById">
		delete from sys_user where id = #{id}
	</delete>
	
	
	<select id="selectRolesByUserIdAndRoleEnabled" resultType="SysRole">
		select 
			r.id,
			r.role_name as roleName,
			r.enabled,
			r.create_by as createBy,
			r.created_at as createdAt
		from sys_user u
		inner join sys_user_role ur on u.id = ur.user_id 
		inner join sys_role r on ur.role_id = r.id 
		where u.id = #{userId} and r.enabled = #{enabled}
	</select>
	
	<select id="selectByUser" resultMap="userMap">
		select id, user_name, user_password, user_email, 
			user_info,head_img, created_at 
		from sys_user
		where 1=1
		<if test="userName != null and userName != ''">
			and user_name like concat('%', #{userName}, '%')
		</if>
		<if test="userEmail != null and userEmail != ''">
			and user_email = #{userEmail}
		</if>
	</select>
	
	<update id="updateByIdSelective">
		update sys_user 
		set 
			<if test="userName != null and userName != ''">
				user_name = #{userName},
			</if>
			<if test="userPassword != null and userPassword != ''">
				user_password = #{userPassword},
			</if>
			<if test="userEmail != null and userEmail != ''">
				user_email = #{userEmail},
			</if>
			<if test="userInfo != null and userInfo != ''">
				user_info = #{userInfo},
			</if>
			<if test="headImg != null">
				head_img = #{headImg, jdbcType=BLOB},
			</if>
			<if test="createdAt != null">
				createdAt = #{createdAt, jdbcType=TIMESTAMP}
			</if>
			id = #{id} <!-- 这里是为了避免拼接的错误 -->
		where id = #{id}
	</update>
	
	<insert id="insert2Selective" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user 
		(
			user_name, user_password,
			<if test="userEmail != null and userEmail != ''">
				user_eamil,
			</if>
			user_info, head_img, created_at
		) values (
			#{userName}, #{userPassword},
			<if test="userEmail != null and userEmail != ''">
				#{userEmail},
			</if>
			#{userInfo}, #{headImg, jdbcType=BLOB},
			#{createdAt, jdbcType=TIMESTAMP}
		)
	</insert>
	
	<select id="selectByIdOrUserName" resultMap="userMap">
		select id, user_name, user_password
			user_email, user_info, head_img,
			created_at
		from sys_user
		where 1=1
		<choose>
			<when test="id != null">
				and id = #{id}
			</when>
			<when test="userName != null and userName != ''">
				and user_name = #{user_name}
			</when>
			<otherwise>
				and 1=2 
			</otherwise>
		</choose>
	</select>
	
	<select id="selectByIdList" resultMap="userMap">
		select id,
			user_name,
			user_password,
			user_email,
			user_info,
			head_img,
			created_at
		from sys_user
		where id in 
		<foreach collection="list" open="(" close=")" separator="," 
			item="id" index="i">
			#{id}
		</foreach>
	</select>
	
	<insert id="insertList" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user 
		(user_name, user_password, user_email, user_info,
		head_img, created_at) 
		values 
		<foreach collection="list" item="user" separator=",">
		(
			#{user.userName}, #{user.userPassword}, #{user.userEmail},
			#{user.userInfo}, #{user.headImg, jdbcType=BLOB},
			#{user.createdAt, jdbcType=TIMESTAMP}
		)
		</foreach>
	</insert>
	
	<update id="updateByMap">
		update sys_user
		set 
		<foreach collection="_parameter" item="val" index="key" separator=",">
			${key} = ${val}
		</foreach>
		where id=#{id}
	</update>
	
</mapper>